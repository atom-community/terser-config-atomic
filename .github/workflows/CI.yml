name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  Test:
    runs-on: ubuntu-22.04
    name: Build
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        node:
          - 18
        pnpm:
          - 8
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            D:\.pnpm-store
            ./node_modules
            ./.parcel-cache
          key: "cache-OS:${{ matrix.os }}-node:${{ matrix.node }}-pnpm:${{ matrix.pnpm }}-${{ hashFiles('./.npmrc') }}-deps:${{ hashFiles('./package.json') }}"
          restore-keys: |
            "cache-OS:${{ matrix.os }}-"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm }}

      - name: Install
        run: |
          pnpm install

      - name: Build
        run: |
          pnpm build

      - name: Lint
        run: |
          pnpm run test.lint
          pnpm run test.format

      - name: Test
        run: |
          pnpm run test

  # Release:
  #   needs: [Test]
  #   if: github.ref == 'refs/heads/master' &&
  #     github.event.repository.fork == false
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Setup Pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8

  #     - name: Install
  #       run: |
  #         pnpm install

  #     - name: Release ðŸŽ‰
  #       uses: cycjimmy/semantic-release-action@v2
  #       with:
  #         extends: |
  #           @atom-ide-community/semantic-release-npm-config
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN  }}
